IF EDT_Data_inicial = "" THEN
	Info("Nenhuma data incial foi informada, por favor digite uma data!")
	SetFocus(EDT_Data_inicial)
	RETURN
END

IF EDT_Data_final = "" THEN
	Info("Nenhuma data final foi informada, por favor digite uma data!")
	SetFocus(EDT_Data_final)
	RETURN
END

IF EDT_Data_final < EDT_Data_inicial THEN
	Info("Data digitada é inválida, por favor digite uma data válida!")
	SetFocus(EDT_Data_inicial)
	RETURN
END

HourGlass(True)
// APAGA OS DADOS
Var_Dt_Venda is Date
Var_CustoTotal is numeric(16,5)
Var_StringDel, Var_Empresa, Var_Situacao, Var_Situacao2 is string
Var_registros is int
Var_ResultDel is Data Source
Var_StringDel = "delete from BI_VENDAS001 where DtVenda between '" + EDT_Data_inicial + "' and '" + EDT_Data_final + "'"
IF NOT HExecuteSQLQuery(Var_ResultDel,Minhaconexao,hQueryWithoutCorrection,Var_StringDel) THEN
	Error("Erro Ao deletar os dados dos pedidos de venda" + CR + HErrorInfo())
END

//Verifica se envia os cancelados
IF CBOX_EnviaCancelados = True THEN
	Var_Situacao = "(pedido.situacao = '2' or pedido.situacao = '9') and "
	Var_Situacao2 = "(compra.situacao = '2' or compra.situacao = '9') and "
ELSE
	Var_Situacao = "pedido.situacao = '2' and "
	Var_Situacao2 = "compra.situacao = '2' and "
END
 
// BUSCA OS DADOS
HReadFirst(empresa)
IF HFound(empresa) = True THEN
	Var_Empresa = empresa.NOME
END

sFaturamentoItens is string

//dsData1 is Data Source 
//dsData2 is Data Source
//dsData3 is Data Source	


//sStrDevol is String = "SELECT itens.CodRed as CodRed,SUM((Itens.Quantidade - Itens.Corte - Itens.Devolvido) * Itens.ValorNegUni) AS ValBruto, "+...
//"sum(itens.valtotperda) as DevolNF, itens.ID_ITE as ID, (case itens.valtotperda when 0 then 0 else  Itens.Quantidade end) as Quantidade "+...
//"FROM Pedido "+...
//"INNER JOIN CFOP    ON CFOP.Codigo		= Pedido.CFOP "+...
//"INNER JOIN Itens   ON Itens.Numero		= Pedido.Numero "+...
//"INNER JOIN cadcli  ON cadcli.Codigo		= Pedido.Nvago1 "+...
//"INNER JOIN Produto ON Produto.CodSim	= Itens.CodRed "+...
//"WHERE Pedido.DT_Data BETWEEN '"+EDT_Data_inicial+"' AND '"+EDT_Data_final+"' "+...
//"AND Pedido.Situacao = '2' AND Pedido.Nvago7 <> 1  AND CFOP.Venda = '1' "+...
//"GROUP BY Pedido.Nvago1, cadcli.fantasia, CFOP.Venda,  Pedido.TipoPedido ,itens.ID_ITE,itens.codred,Itens.Quantidade,itens.valtotperda "+...
//"ORDER BY Pedido.Nvago1"
//
//IF NOT HExecuteSQLQuery(dsData1,Minhaconexao,hQueryWithoutCorrection,sStrDevol) THEN
//	Error("Erro Ao Buscar os dados da Devol.Boa" + CR + HErrorInfo())
//ELSE
//	HReadFirst(dsData1)
//	WHILE NOT HOut(dsData1)
//		TableAddLine(TABLE_NoName1,dsData1.ID,dsData1.CodRed,dsData1.DevolNF,"","",dsData1.Quantidade)
//		HReadNext(dsData1)
//	END
//END
//
//sStrBoa is string = "SELECT compra.nvago6, cadcli.fantasia, Origem.Codigo, Origem.DESCRICAO, sum(itenscom.valornegtot) as Boa, "+...
//"SUM((PRODUTO.PESOLIQUIDO / 1000) * (ITENSCOM.QUANTIDADE)) * -1 AS PESO, itenscom.codred as CodRed , itenscom.ID_ITC as ID "+...
//" , sum(itenscom.quantidade) as Quantidade "+...
//"FROM compra  "+...
//"inner join cfop on compra.cfop			= cfop.codigo "+...
//"inner JOIN cadcli  ON cadcli.Codigo	= compra.Nvago6 "+...
//"inner join itenscom on itenscom.Numero	= compra.Numero	"+...
//"INNER JOIN Produto ON Produto.CodSim	= Itenscom.CodRed "+...
//"INNER JOIN Origem  ON Produto.Origem	= Origem.Codigo "+...
//"WHERE (compra.situacao = 2  or compra.situacao = 8) "+...
//"and cfop.vago3 = '1'  AND compra.DT_Data BETWEEN '"+EDT_Data_inicial+"'AND '"+EDT_Data_final+"' and compra.svago2 = ''  "+...
//"and Compra.Perda = '' "+...
//"GROUP BY compra.nvago6, cadcli.fantasia, Origem.Codigo, Origem.DESCRICAO,itenscom.codred , itenscom.ID_ITC "+...
//"ORDER BY cadcli.fantasia "
//
//IF NOT HExecuteSQLQuery(dsData2,Minhaconexao,hQueryWithoutCorrection,sStrBoa) THEN
//	Error("Erro Ao Buscar os dados da Devol.Boa" + CR + HErrorInfo())
//ELSE
//	HReadFirst(dsData2)
//	WHILE NOT HOut(dsData2)
//		TableAddLine(TABLE_NoName1,dsData2.ID,dsData2.CodRed,"","",dsData2.Boa,dsData2.Quantidade)
//	HReadNext(dsData2)
//	end
//end
//
//sStrRuim is string = "SELECT compra.nvago6, cadcli.fantasia, count(Origem.Codigo) as Clientes, Origem.DESCRICAO, sum(itenscom.valornegtot) as Ruim, "+...
//"SUM((PRODUTO.PESOLIQUIDO / 1000) * (ITENSCOM.QUANTIDADE)) * -1 AS PESO ,itenscom.codred as CodRed, itenscom.ID_ITC as ID "+...
//", sum(itenscom.quantidade) as Quantidade "+...
//"FROM compra "+...
//"inner join cfop on compra.cfop			= cfop.codigo "+...
//"inner JOIN cadcli  ON cadcli.Codigo	= compra.Nvago6 "+...
//"inner join itenscom on itenscom.Numero	= compra.Numero "+...
//"INNER JOIN Produto ON Produto.CodSim	= Itenscom.CodRed "+...
//"INNER JOIN Origem  ON Produto.Origem	= Origem.Codigo "+...
//"WHERE (compra.situacao = 2  or compra.situacao = 8) and cfop.vago3 = '1'  "+...
//"AND compra.DT_Data BETWEEN '"+EDT_Data_inicial+"'AND '"+EDT_Data_final+"' and compra.svago2 = ''  "+...
//"and Compra.Perda = '1' "+...
//"GROUP BY compra.nvago6, cadcli.fantasia, Origem.Codigo, Origem.DESCRICAO,itenscom.codred, itenscom.ID_ITC "+...
//"ORDER BY id_itc "
//
//IF NOT HExecuteSQLQuery(dsData3,Minhaconexao,hQueryWithoutCorrection,sStrRuim) THEN
//	Error("Erro Ao Buscar os dados da Devol.Ruim" + CR + HErrorInfo())
//ELSE
//	HReadFirst(dsData3)
//	WHILE NOT HOut(dsData3)	
//		TableAddLine(TABLE_NoName1,dsData3.ID,dsData3.CodRed,"",dsData3.Ruim,"","")//,dsData3.Quantidade)	
//		HReadNext(dsData3)
//	END
//END

sFaturamentoItens = "Select Itens.ID_Ite as ID, cadcli.NOME, cadcli.CODIGO, cadcli.FANTASIA, cadcli.ENDERECO, cadcli.BAIRRO, cadcli.CIDADE, cadcli.ESTADO,cadcli.CEP, cadcli.CGC2, "+... 
"cadcli1.codigo as CodVendedor, cadcli1.fantasia as Nomevendedor, cadcli.latitude, cadcli.longitude, cadcli.zona, cadcli.area_ent, "+...
"cadcli.area_prom, cadcli.nvago10 as NomeSupervisor, "+...
"(select top(1) clicarac.descricao  from clicarac where cadcli.codigo = clicarac.codcli) as ClasseCliente , "+...
"Produto.Descricao, Produto.Descricao2, "+... 
"Produto.NCM, Produto.CodBarras, produto.unidade, produto.categoria, Itens.CodRed, Itens.vago3, Itens.ValorNegUni, Itens.NVago13 as invisivel,  "+...
"(Itens.Quantidade - Itens.Corte - Itens.Devolvido)as Quantidade, Itens.Corte, Itens.Devolvido, Itens.ValTotPerda as ValTotPerda, "+...
"( (Itens.Quantidade - Itens.Corte - Itens.Devolvido) * itens.PesoLiq) as PesoLiquido2, "+...
"( (Itens.Quantidade - Itens.Corte - Itens.Devolvido) * itens.PesoBru) as PesoBru, "+...
"( (Itens.Quantidade - Itens.Corte - Itens.Devolvido) / Produto.Unipcaixa) as Caixa, "+...
"case cfop.vago1 when '1' then 0 else  ((Itens.Quantidade - Itens.Corte - Itens.Devolvido) * Itens.ValorNegUni) - Itens.ValTotPerda end as ValTotal2, "+...
"coalesce((select  top(1)((Itens.Quantidade - Itens.Corte - Itens.Devolvido) * Itens.ValorNegUni)- Itens.ValTotPerda  from itens where itens.codred = produto.codsim and itens.numero=pedido.numero and tipopedido <> '23 - Troca'),0) as ValTotalsaida, "+..."
//"((Itens.Quantidade - Itens.Corte - Itens.Devolvido) * Itens.ValorNegUni) - Itens.ValTotPerda  as ValTotalsaida, "+...
//"itens.valornegtot as ValorBruto, "+...
//"coalesce((select  top(1)(itens.valornegtot ) from itens where itens.codred = produto.codsim and itens.numero=pedido.numero and tipopedido <> '23 - Troca'),0) as valorBruto, "+..."
"case cfop.vago1 when '1' then 0 else itens.valornegtot end as valorBruto, "+...
"case cfop.vago1 when '1' then ((Itens.Quantidade - Itens.Corte - Itens.Devolvido) * Itens.ValorNegUni) - Itens.ValTotPerda  else 0 end as Valtotalbonificacao, "+...
"case cfop.vago1 when '1' then (Itens.Quantidade - Itens.Corte - Itens.Devolvido)  else 0 end as quanttotalbonificacao,  "+...
"case cfop.vago1 when '1' then 0 else itens.valornegtot end as Valoritentot, "+...
"((Itens.Quantidade - Itens.Corte - Itens.Devolvido) *Produto.PrecoTabCom)  as custo, CFOP.Venda as CFOPvenda, CFOP.Compra as CFOPcompra, "+...
"CFOP.Vago1 as CFOPvago1, "+...
"coalesce((select  top(1)((Itens.Quantidade - Itens.Corte - Itens.Devolvido) * Itens.ValorNegUni) from itens "+...
"where itens.codred = produto.codsim and itens.numero=pedido.numero and tipopedido like '%Troca%'),0) as Troca, "+...
"coalesce((select top(1)((Itens.Quantidade - Itens.Corte - Itens.Devolvido))  from itens "+...
"where itens.codred = produto.codsim and itens.numero=pedido.numero and tipopedido like '%Troca%'),0) as QtdTroca, "+...
"Pedido.Pedido, Pedido.NumNF, Pedido.Serie, Pedido.Deposito, Itens.CFOP, Pedido.Placa, Pedido.Prazo, Pedido.Area, "+...
"Pedido.Nvago1, Pedido.Data, Pedido.DT_Data, Pedido.Supervisor, Pedido.TipoPedido, Pedido.Emite, pedido.situacao, Familia.Descricao As Familia, "+...
"Variante.Descricao As Variante, Linha.Descricao As Linha, Tipo.Descricao As FormaPgto, "+...
"(select  top(1) Ramo.Descricao  from ramo where Cadcli.Ramo = ramo.ramo ) As Ramo ,  "+...
"(select  top(1) Bandeira.Descricao  from bandeira where  Cadcli.Bandeira = Bandeira.Id_Bandeira ) as Bandeira, "+...
"(select  top(1) Redes.Descricao  from redes where (select  Bandeira.Id_Bandeira as Bandeira from bandeira where  Cadcli.Bandeira = Bandeira.Id_Bandeira) = Redes.codigo ) as Rede , "+...
"Origem.Descricao As Origem, "+...
"Marca.Descricao As Marca, "+...
"(0*0) as Boa, (0*0) as Ruim,(0*0) as QtdBoa, (0*0) as QtdRuim "+...
"From Pedido  "+...
"left Join Itens On Itens.Numero				= Pedido.Numero  "+...
"left Join cadcli cadcli1 On cadcli1.CODIGO		= Pedido.Nvago1 "+...
"left Join cadcli On cadcli.CGC2				= Pedido.CGCCPF "+...
"left Join Produto On Itens.CodRed				= Produto.CodSim  "+...
"left Join Familia On Familia.Codigo			= Produto.Familia  "+...
"left Join Variante On Variante.Codigo			= Produto.Variante "+...
"left Join Marca On Marca.Codigo				= Produto.Marca "+...
"left Join Linha On Linha.Codigo				= Produto.Linha  "+...
"left Join Origem On Origem.Codigo				= Produto.Origem "+...
"left join Tipo On pedido.formapgto				= tipo.tipo "+...
"left Join CFOP On Itens.CFOP					= CFOP.codigo "+...
"where " + Var_Situacao + " (pedido.dt_data between '"+EDT_Data_inicial+"' and '"+EDT_Data_final+"') "+...
"and (tipopedido <> '06 - Devoluçao ao fornecedor' and tipopedido <> '36 - Devolução Vasilhame/Sacaria' and tipopedido <> '11 - Baixa de mercadoria impropria para consumo'  and tipopedido <> '12 - Transferencia' ) "+...

"Union all "+...

"Select distinct  Itenscom.ID_ITC as ID, Cadcli.Nome, cadcli.CODIGO, cadcli.FANTASIA, cadcli.ENDERECO, cadcli.BAIRRO, cadcli.CIDADE, cadcli.ESTADO, cadcli.CEP, cadcli.CGC2, "+...
"cadcli1.codigo as CodVendedor, cadcli1.fantasia as nomevendedor, cadcli.latitude, cadcli.longitude, cadcli.zona, cadcli.area_ent, "+...
"cadcli.area_prom, cadcli.nvago10 as NomeSupervisor, "+...
"(select top(1) clicarac.descricao  from clicarac where cadcli.codigo = clicarac.codcli) as ClasseCliente , "+...
"Produto.Descricao, Produto.Descricao2, Produto.NCM, "+...
"Produto.CodBarras, produto.unidade, produto.categoria, ItensCom.CodRed, ItensCom.Svago3, ItensCom.ValorNegUni * -1 as ValorNegUni,  "+...
"ItensCom.NVago4 * -1 as ICMSST, (Itenscom.Quantidade - Itenscom.Corte) * -1as Quantidade, Itenscom.corte, (0 * 0) as devolvidocompra, "+...
"(0 * 0) as valtotperdacompra, ItensCom.PesoLiq * -1 as PesoLiq, ItensCom.PesoBru * -1 as PesoBru, "+...
"( (Itenscom.Quantidade - Itenscom.Corte) / Produto.Unipcaixa) as caixa, "+...
"ItensCom.ValorNegTot * -1 as valtotal2, "+...
"ItensCom.ValorNegTot * -1 as valtotsaida, ItensCom.ValorNegTot * -1 as valortotalBruto, "+...
"(0 * 0) as devolvidocompra, (0 * 0) as devolvidocompra, "+...
"ItensCom.ValorNegTot * -1 as ValorNegTot, (Itenscom.ValCusto * (Itenscom.quantidade - ItensCom.Corte)) as custo,  "+...
"CFOP.Venda as CFOPvenda, CFOP.Compra as CFOPcompra, CFOP.Vago1 as CFOPvago1,(0 * 0) as TrocaCompra, (0 * 0) as QtdTrocaComrpa, Compra.Numero, Compra.NumNF, Compra.Serie, "+...
"Compra.Deposito, ItensCom.CFOP, Compra.Placa, Compra.Prazo, Compra.Area, Compra.Nvago1, Compra.DT_Dataent, Compra.DT_DATA, "+...
"Compra.Vendedor, Compra.Obs1, Compra.Emite, Compra.situacao, Familia.Descricao As Familia, Variante.Descricao As Variante,  "+...
"Linha.Descricao As Linha, Tipo.Descricao as FormaPgto, "+...
"(select  top(1) Ramo.Descricao  from ramo where Cadcli.Ramo = ramo.ramo ) As Ramo ,  "+...
"(select  top(1) Bandeira.Descricao  from bandeira where  Cadcli.Bandeira = Bandeira.Id_Bandeira ) as Bandeira, "+...
"(select  top(1) Redes.Descricao  from redes where (select  Bandeira.Id_Bandeira as Bandeira from bandeira where  Cadcli.Bandeira = Bandeira.Id_Bandeira) = Redes.codigo ) as Rede,  "+...
"Origem.Descricao As Origem, Marca.Descricao As Origem, "+...
"coalesce((SELECT itenscom.valornegtot FROM compra "+...
"WHERE compra.numero = itenscom.numero  and  (compra.situacao = 2  or compra.situacao = 8) and cfop.vago3 = '1' and compra.svago2 = '' and Compra.Perda = ''),0)  as Boa, "+...
"coalesce((SELECT itenscom.valornegtot FROM compra "+...
"WHERE compra.numero = itenscom.numero  and (compra.situacao = 2  or compra.situacao = 8) and cfop.vago3 = '1' and Compra.Perda = '1'),0) as Ruim, "+...
"coalesce((SELECT itenscom.quantidade FROM compra "+..."
"WHERE compra.numero = itenscom.numero  and  (compra.situacao = 2  or compra.situacao = 8) and cfop.vago3 = '1' and compra.svago2 = '' and Compra.Perda = ''),0)  as QtdBoa, "+...
"coalesce((SELECT itenscom.quantidade FROM compra "+...
"WHERE compra.numero = itenscom.numero  and (compra.situacao = 2  or compra.situacao = 8) and cfop.vago3 = '1' and Compra.Perda = '1'),0) as QtdRuim "+...
"from compra "+...
"left Join Cadcli On cadcli.CGC2				= Compra.CGCCPF "+...
"left Join ItensCom On ItensCom.Numero			= Compra.Numero "+...
"left Join Produto On ItensCom.CodRed			= Produto.CodSim "+...
"left Join CFOP On ItensCom.CFOP				= CFOP.codigo  "+...
"left Join cadcli cadcli1 On cadcli1.CODIGO		= Compra.Nvago6 "+...
"left Join Familia On Familia.Codigo			= Produto.Familia "+...   
"left Join Variante On Variante.Codigo			= Produto.Variante  "+...
"left Join Marca On Marca.Codigo				= Produto.Marca "+...
"left Join Linha On Linha.Codigo				= Produto.Linha     "+...
"left Join Origem On Origem.Codigo				= Produto.Origem     "+...
"left join Tipo On Compra.Tipopg				= tipo.tipo "+...
"where " + Var_Situacao2 + " (compra.DT_Data between '"+EDT_Data_inicial+"' and '"+EDT_Data_final+"') "+...  
"and ( CFOP.Vago2 = '1' or cfop.vago3='1' ) and (compra.svago2 = ' ' ) "



dsFatItens is Data Source

Var_CorteTotal is string
Var_TipoPreco is string
Var_TipoPedido is string
Var_TipoDocumento is string
sVar_ProdutoErrado, sVar_DescProdutoErrado, sVar_CustoErrado, Var_MensagemErrados is string
N_Errados is int = 0
nVar_seek is int 

IF NOT HExecuteSQLQuery(dsFatItens,Minhaconexao,hQueryWithoutCorrection,sFaturamentoItens) THEN
	Error("Erro Ao Buscar os dados dos pedidos de venda" + CR + HErrorInfo())
ELSE
	HReadFirst(dsFatItens)
	WHILE NOT HOut(dsFatItens)
	
	//=============================================================		
	IF dsFatItens.CFOPvenda = "1" THEN
		Var_TipoDocumento = "Venda"
	END
	IF dsFatItens.CFOPcompra = "1" THEN
		Var_TipoDocumento = "Venda"
	END
	IF dsFatItens.CFOPvago1 = "1" THEN
		Var_TipoDocumento = "Bonificação"
	END	
	//=============================================================		
	IF dsFatItens.Quantidade = 0 THEN
		Var_CorteTotal = "S"
	ELSE
		Var_CorteTotal = "N"
	END
	//=============================================================	
	IF dsFatItens.vago3 = "1" THEN
		Var_TipoPreco = "Crítica"
	ELSE
		Var_TipoPreco = "Normal"
	END	
 	//==============================================================
	IF dsFatItens.Emite = "1" THEN
		Var_TipoPedido = "Normal"
	ELSE
		Var_TipoPedido = "VIP"
	END		
	//=============================================================	
	IF dsFatItens.Situacao = "9" THEN
		dsFatItens.ValTotal2 = dsFatItens.ValTotal2 * -1
	END
	//==============================================================
	
	//Feito desta forma para corrigir o problema --> Error Number = 170147, Falha ao atualizar registro no banco de dados,  Description = Falha ao converter data e/ou hora da cadeia de caracteres.	
	Var_Dt_Venda = dsFatItens.DT_Data 
	Var_Dt_Venda = DateToString(Var_Dt_Venda,"DD/MM/YYYY")

//	Var_CustoTotal = dsFatItens.custo
	//==============================================================	
		
		HReset(BI_VENDAS001)
		BI_VENDAS001.TipoDocumento = Var_TipoDocumento
		BI_VENDAS001.Empresa = Var_Empresa
		BI_VENDAS001.Canal = "Distribuidor"
		BI_VENDAS001.DtVenda = dsFatItens.DT_Data
		BI_VENDAS001.Pedido = dsFatItens.Pedido 						
		BI_VENDAS001.NumNF =  dsFatItens.NumNF
		BI_VENDAS001.SerieNF = dsFatItens.Serie
		BI_VENDAS001.Deposito = dsFatItens.Deposito
		BI_VENDAS001.CodigoCliente = dsFatItens.CODIGO
		BI_VENDAS001.CNPJ = dsFatItens.CGC2
		BI_VENDAS001.Nome = dsFatItens.Nome
		BI_VENDAS001.Fantasia = dsFatItens.Fantasia
		BI_VENDAS001.Endereco = dsFatItens.Endereco
		BI_VENDAS001.Bairro = dsFatItens.Bairro
		BI_VENDAS001.Cidade = dsFatItens.Cidade
		BI_VENDAS001.Estado = dsFatItens.Estado
		BI_VENDAS001.CEP = dsFatItens.CEP		
		BI_VENDAS001.Latitude = dsFatItens.Latitude
		BI_VENDAS001.Longitude = dsFatItens.Longitude
		BI_VENDAS001.Organização = dsFatItens.Rede
		BI_VENDAS001.Bandeira = dsFatItens.Bandeira
		BI_VENDAS001.Ramo = dsFatItens.Ramo
		BI_VENDAS001.Zona = dsFatItens.Zona
		BI_VENDAS001.CFOP = dsFatItens.CFOP
		BI_VENDAS001.Placa = dsFatItens.Placa
		BI_VENDAS001.Quantidade = dsFatItens.Quantidade
		BI_VENDAS001.Corte = dsFatItens.Corte
		BI_VENDAS001.ClasseCliente = dsFatItens.ClasseCliente
		BI_VENDAS001.CodigoProduto = dsFatItens.CodRed
		BI_VENDAS001.DescricaoProduto = dsFatItens.Descricao
		BI_VENDAS001.Origem = dsFatItens.Origem
		BI_VENDAS001.Linha = dsFatItens.Linha
		BI_VENDAS001.Familia = dsFatItens.Familia
		BI_VENDAS001.Variante = dsFatItens.Variante
		BI_VENDAS001.Categoria = dsFatItens.categoria
		BI_VENDAS001.Marca = dsFatItens.Marca
		BI_VENDAS001.NCM = dsFatItens.NCM
		BI_VENDAS001.EAN = dsFatItens.CodBarras
		BI_VENDAS001.Unidade = dsFatItens.Unidade
		BI_VENDAS001.TipoPreco = Var_TipoPreco
		BI_VENDAS001.TipoPedido = Var_TipoPedido
		Var_CustoTotal = dsFatItens.custo
		IF Var_CustoTotal < 0 OR Var_CustoTotal > 100000 THEN
			IF N_Errados < 1 THEN
				Var_MensagemErrados = dsFatItens.codred+" - "+dsFatItens.descricao+" Valor de Custo: "+Var_CustoTotal
				N_Errados++
				ELSE
				IF Contains(Var_MensagemErrados,dsFatItens.codred+" - "+dsFatItens.descricao+"  Valor de Custo: "+Var_CustoTotal) = True THEN
					GOTO next
					ELSE
					Var_MensagemErrados +="," +CR+dsFatItens.codred+" - "+dsFatItens.descricao+"  Valor de Custo: "+Var_CustoTotal
				END
			END
			next:
			Var_CustoTotal = 0
		END
		BI_VENDAS001.CustoTotal =  Var_CustoTotal//dsFatItens.custo //Var_CustoTotal
		BI_VENDAS001.Caixas = dsFatItens.Caixa
		BI_VENDAS001.CorteTotal = Var_CorteTotal
		BI_VENDAS001.Devol = dsFatItens.Devolvido
		BI_VENDAS001.ValorUnitario = dsFatItens.ValorNegUni
		BI_VENDAS001.ValorTotal = dsFatItens.ValTotal2
		BI_VENDAS001.DevolucaoUnitario = dsFatItens.ValorNegUni
		BI_VENDAS001.PesoLiquido = dsFatItens.PesoLiquido2
		BI_VENDAS001.PesoBruto = dsFatItens.PesoBru
		BI_VENDAS001.SubTrib = dsFatItens.invisivel
		BI_VENDAS001.AreaVenda = dsFatItens.Area
		BI_VENDAS001.AreaEntrega = dsFatItens.Area_Ent
		BI_VENDAS001.AreaPromotor = dsFatItens.Area_prom
		BI_VENDAS001.CodigoVendedor = dsFatItens.CodVendedor
		BI_VENDAS001.NomeVendedor = dsFatItens.Nomevendedor
		BI_VENDAS001.NomeSupervisor = dsFatItens.NomeSupervisor
		BI_VENDAS001.NomePromotor = dsFatItens.Area_prom
		BI_VENDAS001.NomeEntregador = dsFatItens.Area_ent
		BI_VENDAS001.FormaPgto = dsFatItens.FormaPgto
		BI_VENDAS001.Prazo = dsFatItens.Prazo
		BI_VENDAS001.ValorTotalBruto = dsFatItens.valorbruto + dsFatItens.Ruim + dsFatItens.boa // O valor bruto não pode abater nem a dev. boa e nem a ruim.
		BI_VENDAS001.ValorTotalLiquido = dsFatItens.valorbruto + dsFatItens.Ruim // O valor liquido só pode abater a Dev. Boa, neste caso eu adiciono somente a Dev. Ruim que já foi retirada na query
		BI_VENDAS001.Troca = dsFatItens.Troca
		BI_VENDAS001.QtdTroca = dsFatItens.QtdTroca
		//BI_VENDAS001.ValorPerda = dsFatItens.ValTotPerda
		BI_VENDAS001.ValorPerda = dsFatItens.Ruim + dsFatItens.ValTotPerda + dsFatItens.Troca
		BI_VENDAS001.DevolRuim  = dsFatItens.Ruim
		BI_VENDAS001.DevolBoa	= dsFatItens.Boa
		BI_VENDAS001.QtdPerda 	= dsFatItens.QtdBoa + dsFatItens.QtdRuim + dsFatItens.QtdTroca
		BI_VENDAS001.ValorPerdaVenda = dsFatItens.ValTotPerda
//		Var_seek = TableSeek(TABLE_NoName1.COL_ID,dsFatItens.ID)
//		IF Var_seek <> - 1 THEN
//			BI_VENDAS001.ValorPerda = TABLE_NoName1[Var_seek].COL_Devol + TABLE_NoName1[Var_seek].COL_DevolRuim + dsFatItens.Troca 
//			Bi_vendas001.DevolRuim  = TABLE_NoName1[Var_seek].COL_DevolRuim	
//			BI_VENDAS001.DevolBoa	= TABLE_NoName1[Var_seek].COL_DevolBoa
//			Bi_vendas001.QtdPerda	= TABLE_NoName1[Var_seek].COL_Quantidade	
//		else
//			BI_VENDAS001.ValorPerda = 0
//			BI_VENDAS001.DevolRuim  = 0
//			BI_VENDAS001.DevolBoa	= 0
//			BI_VENDAS001.QtdPerda 	= 0
//		END
			
		HAdd(BI_VENDAS001)
		HReadNext(dsFatItens)

		Var_registros++
		STC_Registros = Var_registros	
	END
END
HourGlass(False)
Info("Processo Concluído com Sucesso!" + CR + Var_registros + " Registros gravados.")
IF Var_MensagemErrados <> "" THEN
	Info(Var_MensagemErrados)
END
Close()

